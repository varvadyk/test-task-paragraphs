{"version":3,"sources":["reducer/homeReduser.js","store.js","components/Paragraphs/style.js","components/Paragraphs/index.js","page/Home/style.js","selectors/index.js","components/SurchParagraph/index.js","page/Home/index.js","router.js","App.js","serviceWorker.js","index.js"],"names":["initialState","post","title","content","homeReduser","state","action","type","value","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ParagraphTitle","styled","div","ParagraphContent","ParagraphBox","Paragraphs","ParagraphWrapper","SearchWrapper","paragraphs","useStyles","makeStyles","theme","root","margin","spacing","CustomizedInputBase","classes","dataPharagraph","useSelector","console","log","useState","searchTerm","setSerchTerm","searchResults","setSearchResults","initialCount","setInitialCount","paginationArr","_","chunk","useEffect","results","filter","includes","className","noValidate","autoComplete","Input","plasholder","inputProps","onChange","event","target","map","item","index","key","Pagination","count","Math","ceil","length","color","e","Home","dataparagraphs","routes","path","component","exact","App","route","toString","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a94657d5.chunk.js","sourcesContent":["export const ADD_PARAGRAPH='ADD_PARAGRAPH';\r\n\r\n export const initialState={\r\npost :[\r\n    {\r\n        title: \"Svydovets ridge \",\r\n        content: \"Land of lakes, mountain beech forests, green pastures and colorful mountains. The Svydovets ridge is one of the most picturesque in the Carpathians\",\r\n    },\r\n    {\r\n        title: \"A mountain is a with big Ears stone  \",\r\n        content: \"Fantasy each of us draws different offenses. So it takes place with those, who looks at a mountain. An ear is really seen someone, and someone noticed a nose!\",\r\n        \r\n    },\r\n    {\r\n        title: \"Mountain of Spoke  \",\r\n        content: \"Mountain that made friends with thunder and thunderclouds. Spokes as if beckon to itself an inclement weather. Clouds here like to cry and outpour all sorrow to the mountain. \",\r\n     \r\n    \r\n\r\n    },\r\n\r\n    {\r\n        title: \"Dzembonya\",\r\n        content: \"Great place to hide from the world and escape from civilization. Dzembronya is the highest mountain village in Ukraine and the most picturesque mountain \",\r\n     \r\n        \r\n    },\r\n    {\r\n        title: \"Mountain valley of Borzhava  \",\r\n        content: \"The nature of the Carpathians is multifaceted. The bright colors of the mountain valley of Borzhava, flooded with sunlight, boundless expanses, give a feeling of wonder  \",\r\n     \r\n    },\r\n    {\r\n        title: \"Dovbush rocks \",\r\n        content: \"Nature is the best sculptor. Only she could create such powerful and wise forms as Dovbush Rocks. The outlines of huge rocks and giant stones of incredible images of fantastic creatures look something like this.\",\r\n     \r\n    },\r\n    {\r\n        title: \"SKOLIVSKY park of the Beskids \",\r\n        content: \"Between the three Carpathian rivers - Stryi, Opir and Mizunka is a charming mountain range. The forests of the Carpathians give coolness. Huge beeches, ancient spruces and firs have been growing here for more than hundreds of years.  \",\r\n     \r\n    },\r\n    {\r\n        title: \"Rocky Karst Bridge  \",\r\n        content: \"The rock is a karst bridge, skillfully carved by the sea, an imprint of ancient times. You can also get to this place by singing - there is no road to the fantastic rock as such  \",\r\n    },\r\n    {\r\n        title: \"Milk Stone Cave \",\r\n        content: \"It seems that you described in a fairy tale. He is believed to be the master of this underground kingdom, who created fantastic models.   \",\r\n     \r\n    },\r\n    {\r\n        title: \"Cinderella Cave\",\r\n        content: \"There are unique natural places in the Carpathians underground. Cinderella Cave has earned its name for its modesty.  \",\r\n     \r\n    },\r\n]\r\n\r\n}\r\nconst  homeReduser=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ADD_PARAGRAPH:{\r\n            return{\r\n                ...state,\r\n                post:[...state.post,action.value]\r\n            }\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport default homeReduser;","import {createStore} from 'redux';\r\nimport homeReduser from './reducer/homeReduser';\r\n const store =createStore(homeReduser,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n    export default store;","import styled from 'styled-components';\r\nexport const ParagraphTitle= styled.div`\r\ncolor:#2E8B57;\r\nfont-size:24px;\r\n`;\r\nexport const ParagraphContent=styled.div`\r\ncolor:#A9A9A9;\r\nfont-size:20px;\r\nwidth:1000px;\r\n\r\n`;\r\nexport const ParagraphBox=styled.div`\r\nwight:500px;\r\n`;","import React  from \"react\";\r\nimport {ParagraphBox}  from './style.js';\r\nimport {ParagraphTitle} from './style.js';\r\nimport {ParagraphContent}from './style.js';\r\n\r\nconst Paragraphs=({title,content})=>{\r\n    return(\r\n<ParagraphBox>\r\n         <ParagraphTitle> {title} </ParagraphTitle>\r\n         <ParagraphContent>{content}</ParagraphContent>\r\n         </ParagraphBox>\r\n    )\r\n}\r\nexport default Paragraphs;\r\n","import styled from 'styled-components';\r\n\r\nexport const ParagraphWrapper = styled.div`\r\n\r\n\r\n`;\r\nexport const SearchWrapper=styled.div`\r\nbackground-color:blck;\r\n` ;\r\nexport const ParagraphNavigation=styled.div`\r\nwight:100px;\r\n`","export const    paragraphs=state=>state.post;","import React, { useEffect,useState  } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paragraphs from '../../components/Paragraphs';\r\nimport { useSelector } from 'react-redux';\r\nimport {paragraphs} from '../../selectors';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport _ from 'lodash';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport const CustomizedInputBase =()=>{\r\nconst classes = useStyles();\r\nconst dataPharagraph=useSelector(paragraphs);\r\nconsole.log(dataPharagraph);\r\nconst [searchTerm,setSerchTerm]=useState(\"\");\r\nconst [searchResults,setSearchResults]=useState([]);\r\nconst handleChange=event=>{\r\n  setSearchResults(event.target.value);\r\n}\r\nconst [initialCount, setInitialCount] = useState(0)\r\nconst paragraphsPerPage = 2;\r\nconst setPaginationCount = (e, value) => setInitialCount(value-1)\r\nconst paginationArr=_.chunk(dataPharagraph, paragraphsPerPage)[initialCount] || []\r\nuseEffect(() =>{\r\n  const results = searchTerm && paginationArr.filter(post =>\r\npost.title.includes(searchTerm) &&\r\npost.content.includes(searchTerm) \r\n    );\r\n    setSerchTerm(results)\r\n},[paginationArr, searchTerm]);\r\n  return (\r\n    <>\r\n     <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <Input plasholder=\"Searsh\" inputProps={{ 'aria-label': 'description' }}    value={searchTerm} onChange={handleChange} />\r\n     \r\n    </form>\r\n    <div>\r\n     {searchResults && (paginationArr.map((item,index) => {\r\n         return <Paragraphs key={item+index}{...item} />;\r\n        }))}\r\n        </div>\r\n        <Pagination count={Math.ceil(dataPharagraph.length/paragraphsPerPage)} color={\"primary\"} onChange={setPaginationCount} />\r\n\r\n        </>\r\n  );\r\n        }   ","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Paragraphs from '../../components/Paragraphs';\r\nimport {ParagraphWrapper} from './style.js';\r\nimport {CustomizedInputBase} from '../../components/SurchParagraph';\r\nimport {PaginationControlled} from '../../components/Pagination';\r\nimport {paragraphs}  from '../../selectors';\r\nimport {SearchWrapper}  from './style.js';\r\nimport{ParagraphNavigation}from './style.js';\r\n\r\nconst Home =()=>{\r\n    const dataparagraphs=useSelector(paragraphs);\r\n    console.log(dataparagraphs);\r\n    const allParagraphs =dataparagraphs.map((post)=>{\r\n        const {title,content}=post;\r\n    return(\r\n        <>\r\n       \r\n    <ParagraphWrapper>\r\n     <Paragraphs \r\n        title={title}\r\n        content={content}\r\n         />\r\n   </ParagraphWrapper>\r\n   \r\n   </>\r\n    )\r\n\r\n})\r\nreturn(\r\n    <>\r\n    <SearchWrapper>\r\n   <CustomizedInputBase />\r\n       </SearchWrapper>\r\n\r\n    {/* <ParagraphNavigation>\r\n    <PaginationControlled />\r\n    </ParagraphNavigation> */}\r\n    </>\r\n)\r\n}\r\nexport default Home;","import React from 'react';\r\nimport Home from './page/Home';\r\nexport const routes=[\r\n    \r\n\r\n       {\r\n          path:'/',\r\n          component:<Home />,\r\n          exact: true\r\n      },\r\n  \r\n    {\r\n      path:'*',\r\n      component: ()=>(<div>page not found</div>),\r\n     \r\n   }\r\n   ];","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n\n} from 'react-router-dom';\nimport {routes} from './router';\n\nfunction App() {\n  return (\n    <>\n         <Router>\n        <Switch>\n{\n  routes.map(route =>(\n    <Route exact = {route.exact}\n     key={route.toString()} \n     path={route.path}>\n      {route.component}\n    </Route>\n     ))\n    }\n       </Switch>\n    </Router>\n    </>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider}from \"react-redux\";\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}